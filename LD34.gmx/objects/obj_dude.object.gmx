<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_dude</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///INIT
enum dudestate {
    normal,
    walking,
    sad, 
    happy
}

dudeColor = global.color_map[irandom_range(0,9)];

DudeState = dudestate.normal;

subimg = 0;
animation_count = 0;

moveToX = x;
moveToY = y;

step1 = false;
step2 = false;

depth = 6;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///STEP (moveTo)
switch(DudeState){

    //NORMAL STATE
    case dudestate.normal:
        subimg = 0;
        if( x != moveToX ){
            if( x - global.MOVE_CONST &lt; moveToX ) {
                x = moveToX;
            }
            else {
                x -= global.MOVE_CONST;
            }
        }

        if( y != moveToY ) {
            if( y - global.MOVE_CONST_Y &lt; moveToY ) {
                y = moveToY;
            }
            else {
                y -= global.MOVE_CONST_Y;
            }
        }
        break;
    
    //WALKING STATE
    case dudestate.walking:
        if( x != moveToX ){
            if( x - global.MOVE_CONST &lt; moveToX ) {
                x = moveToX;
            }
            else {
                x -= global.MOVE_CONST;
            }
        }

        if( y != moveToY ) {
            if( y - global.MOVE_CONST_Y &lt; moveToY ) {
                y = moveToY;
            }
            else {
                y -= global.MOVE_CONST_Y;
            }
        }
        
        //here's some gross if statements to set him to a correct subimg
        animation_count++;        
        if(animation_count &gt; 7){
            animation_count = 0;
        }
        subimg = global.dude_walk_ani[animation_count];

        
        //Sets state to normal if idle.
        if( x == moveToX )
        {
            DudeState = dudestate.normal;
            walknum = 0;
        }
        
        break;
        
    //SAD STATE
    case dudestate.sad:
        animation_count++;        
        if(animation_count &gt; 14){
            animation_count = 0;
        }
        subimg = global.dude_sad_ani[animation_count];
        
        if( x != moveToX ){
            if( x - global.MOVE_CONST &lt; moveToX ) {
                x = moveToX;
            }
            else {
                x -= global.MOVE_CONST;
            }
        }

        if( y != moveToY ) {
            if( y + global.MOVE_CONST_Y &gt; moveToY ) {
                y = moveToY;
            }
            else {
                y += global.MOVE_CONST_Y * 1.5;
            }
        }
        
        if( x == moveToX )
        {
            instance_destroy();
        }
        
        break;
        
    //HAPPY STATE
    case dudestate.happy:
    animation_count++;        
        if(animation_count &gt; 7){
            animation_count = 0;
        }
        subimg = global.dude_hap_ani[animation_count];
        
        if( x != moveToX ){
            if( x - global.MOVE_CONST * 2&lt; moveToX ) {
                x = moveToX;
            }
            else {
                x -= global.MOVE_CONST * 2;
            }
        }

        if( y != moveToY ) {
            if( y + global.MOVE_CONST_Y * 2 &gt; moveToY ) {
                y = moveToY;
            }
            else {
                y += global.MOVE_CONST_Y * 2;
            }
        }
        
        if ( x == moveToX ) {
            instance_destroy();
        }   
        
        break;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///OVERRIDDEN DRAW EVENT
draw_sprite_ext(sprite_index, subimg, x, y, image_xscale, image_yscale, image_angle, dudeColor, image_alpha);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

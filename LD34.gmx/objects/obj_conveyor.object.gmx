<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Create the arrays of food based on level

enum conState {
    normal,
    loading
}

State = conState.loading;

//INIT SPLASH
LoadingSplash = instance_create( 512, 384, obj_loadingObj );
//INIT TIMER
GameTimer = instance_create( 700, 50, obj_timer );
GameTimer.mins = 0;
GameTimer.secs = 30;
GameTimer.mils = 0.000;
//INIT CONVEYOR
ConveyorQueue = ds_list_create();

//INITIALIZED TO NULL
//Should be initialized by Room object creating it.
Foodstuff[0,0] = 0;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>other</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Input: 1 if EAT, 2 if SLAP 


if( ds_list_size(ConveyorQueue) &lt; 10 ) {
    scr_makeNewFood(id);
}

switch(State){
    case conState.loading:
        if( LoadingSplash.finished == true ){
            State = conState.normal;
            GameTimer.canupdate = true;
            with(LoadingSplash) { instance_destroy(); }
        }
        break;
    case conState.normal:
        var input = scr_get_input();
        
        if( input == 1 ){
            scr_applyFood(ConveyorQueue);
            scr_deleteFood(ConveyorQueue, 0);
            scr_pushFoodUp(id);
        }
        
        if( input == 2 ){
            scr_deleteFood(ConveyorQueue, 1);
            scr_pushFoodUp(id);
        }
        break;
}


</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
